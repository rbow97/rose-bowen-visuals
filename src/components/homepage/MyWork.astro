---
import Container from "../Container.astro";
import ImageWithCaption from "../ImageWithCaption.astro";
import VideoWithCaption from "../VideoWithCaption.astro";

interface WorkItemsProps {
  title: string;
  description: string;
  href: string;
  caption: string;
  buttonText: string;
  imageUrl?: string;
  videoUrl?: string;
}

const workItems: WorkItemsProps[] = [
  {
    title: "Cuckoo Fibre",
    description:
      "A broadband provider that I helped go through a complete rebrand. We set up the design system, rebuilt the website, and improved key user experiences like the customer sign-up journey.",
    videoUrl: "/videos/3d-worlds-website.mp4",
    href: "/work/cuckoo-fibre",
    caption: "Cuckoo Fibre",
    buttonText: "Cuckoo Fibre",
  },
  {
    title: "Alex Hughes photography",
    description:
      "An elegant and simple photography site built using Astro, TailwindCSS, and Figma, focusing on clean design and smooth user experience to showcase this photographer's work.",
    videoUrl: "/videos/alex-hughes.mp4",
    href: "/work/alex-hughes-photography",
    caption: "Alex Hughes photography",
    buttonText: "Alex Hughes photography",
  },
  {
    title: "Feature Films Featuring",
    description:
      "A personal project to cross-reference individuals in the film industry, outputting their common projects. This project focuses heavily on data manipulation and transformation.",
    videoUrl: "/videos/feature-films-featuring-vid.mp4",
    href: "/work/feature-films-featuring",
    caption: "Feature Films Featuring",
    buttonText: "Feature Films Featuring",
  },
];
---

<section aria-label="Work" class="pb-[50px] mt-[90px] md:mt-[170px]" id="work">
  <Container>
    <h2 class="text-[34px] md:text-[60px] mb-[20px] md:mb-12 my-work-heading">
      My work
    </h2>

    <div class="space-y-16">
      {
        workItems.map((item) => (
          <div class="flex flex-col md:flex-row gap-8 items-start work-item">
            <div class="w-full md:w-1/3">
              <h3 class="text-[28px] md:text-[36px] mb-4 border-t-2   pt-[24px] md:pt-[30px]">
                {item.title}
              </h3>
              <p class="text-[20px] md:text-[30px]  leading-[110%]">
                {item.description}
              </p>
            </div>
            <div class="w-full md:w-2/3">
              {item.videoUrl ? (
                <VideoWithCaption
                  src={item.videoUrl}
                  href={item.href}
                  caption={item.caption}
                  buttonText={item.buttonText}
                />
              ) : (
                <ImageWithCaption
                  src={item.imageUrl}
                  href={item.href}
                  caption={item.caption}
                  buttonText={item.buttonText}
                />
              )}
            </div>
          </div>
        ))
      }
    </div>
  </Container>
</section>

<style>
  .my-work-heading,
  .work-item {
    opacity: 0;
    transform: translateY(50px);
  }
</style>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  function setupMyWorkAnimation() {
    const myWorkSection = document.querySelector("#work");
    const myWorkHeading = myWorkSection?.querySelector(".my-work-heading");
    const workItems = myWorkSection?.querySelectorAll(".work-item");

    if (!myWorkSection || !myWorkHeading || !workItems) return;

    // Heading animation
    gsap.fromTo(
      myWorkHeading,
      {
        opacity: 0,
        y: 50,
      },
      {
        opacity: 1,
        y: 0,
        duration: 1,
        ease: "power2.out",
        scrollTrigger: {
          trigger: myWorkHeading,
          start: "top 80%",
          toggleActions: "play none none none",
        },
      }
    );

    // Work items animation
    workItems.forEach((item) => {
      gsap.fromTo(
        item,
        {
          opacity: 0,
          y: 50,
        },
        {
          opacity: 1,
          y: 0,
          duration: 1,
          ease: "power2.out",
          scrollTrigger: {
            trigger: item,
            start: "top 80%",
            toggleActions: "play none none none",
          },
        }
      );
    });
  }

  document.addEventListener("DOMContentLoaded", setupMyWorkAnimation);
</script>
