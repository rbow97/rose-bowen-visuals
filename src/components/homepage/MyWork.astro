---
import ImageWithCaption from "../ImageWithCaption.astro";
import VideoWithCaption from "../VideoWithCaption.astro";

interface WorkItemsProps {
  title: string;
  description: string;
  href: string;
  caption: string;
  buttonText: string;
  imageUrl?: string;
  videoUrl?: string;
}

const workItems: WorkItemsProps[] = [
  {
    title: "Cuckoo Broadband",
    description:
      "I'm an independent design agency partnering with those making a positive difference in the world.",
    videoUrl: "/videos/3d-worlds-website.mp4",
    href: "/",
    caption: "Rose's friend",
    buttonText: "Rose's friend",
  },
  {
    title: "Alex Hughes photography",
    description:
      "I'm an independent design agency partnering with those making a positive difference in the world.",
    videoUrl: "/videos/alex-hughes.mp4",
    href: "/",
    caption: "Alex Hughes photography",
    buttonText: "Alex Hughes photography",
  },
  {
    title: "Feature Films Featuring",
    description:
      "I'm an independent design agency partnering with those making a positive difference in the world.",
    videoUrl: "/videos/feature-films-featuring-vid.mp4",
    href: "/",
    caption: "Feature Films Featuring",
    buttonText: "Feature Films Featuring",
  },
];
---

<section
  aria-label="My work"
  class="bg-purple-600 pb-[50px] text-white mt-[90px] md:mt-[170px]"
  id="my-work"
>
  <h2
    class="text-[34px] md:text-[60px] mb-[20px] md:mb-12 text-primary-blue my-work-heading"
  >
    My work
  </h2>

  <div class="space-y-16">
    {
      workItems.map((item) => (
        <div class="flex flex-col md:flex-row gap-8 items-start work-item">
          <div class="w-full md:w-1/3">
            <h3 class="text-[28px] md:text-[36px] mb-4 border-t-2 text-primary-blue border-t-primary-blue pt-[24px] md:pt-[30px]">
              {item.title}
            </h3>
            <p class="text-[20px] md:text-[30px] text-primary-blue leading-[110%]">
              {item.description}
            </p>
          </div>
          <div class="w-full md:w-2/3">
            {item.videoUrl ? (
              <VideoWithCaption
                src={item.videoUrl}
                href={item.href}
                caption={item.caption}
                buttonText={item.buttonText}
              />
            ) : (
              <ImageWithCaption
                src={item.imageUrl}
                href={item.href}
                caption={item.caption}
                buttonText={item.buttonText}
              />
            )}
          </div>
        </div>
      ))
    }
  </div>
</section>

<style>
  .my-work-heading,
  .work-item {
    opacity: 0;
    transform: translateY(50px);
  }
</style>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  function setupMyWorkAnimation() {
    const myWorkSection = document.querySelector("#my-work");
    const myWorkHeading = myWorkSection?.querySelector(".my-work-heading");
    const workItems = myWorkSection?.querySelectorAll(".work-item");

    if (!myWorkSection || !myWorkHeading || !workItems) return;

    // Heading animation
    gsap.fromTo(
      myWorkHeading,
      {
        opacity: 0,
        y: 50,
      },
      {
        opacity: 1,
        y: 0,
        duration: 1,
        ease: "power2.out",
        scrollTrigger: {
          trigger: myWorkHeading,
          start: "top 80%",
          toggleActions: "play none none none",
        },
      }
    );

    // Work items animation
    workItems.forEach((item) => {
      gsap.fromTo(
        item,
        {
          opacity: 0,
          y: 50,
        },
        {
          opacity: 1,
          y: 0,
          duration: 1,
          ease: "power2.out",
          scrollTrigger: {
            trigger: item,
            start: "top 80%",
            toggleActions: "play none none none",
          },
        }
      );
    });
  }

  document.addEventListener("DOMContentLoaded", setupMyWorkAnimation);
</script>
