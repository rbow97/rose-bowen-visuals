---
import Button from "../Button.astro";
import { InstagramIcon } from "../icons/InstagramIcon";
import { LinkedInIcon } from "../icons/LinkedInIcon";

const menuItems = [
  { href: "/", label: "Rose Bowen" },
  { href: "/#info", label: "Info" },
  { href: "/#work", label: "Work" },
];
---

<header
  class="sticky z-20 top-0 pt-4 md:pt-8 w-[calc(100%_-_40px)] left-5 right-5 flex justify-between"
>
  <div class="w-full flex items-center md:justify-start justify-between">
    <nav>
      <ul class="flex md:gap-4 gap-3">
        {
          menuItems.map((item) => (
            <li class="menu-item">
              <a href={item.href}>
                <Button>{item.label}</Button>
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
    <button
      aria-label="Change the colour theme"
      class="ml-4 theme-button menu-item"
    >
      <img src="/images/icons/theme-button.svg" />
    </button>
  </div>
  <div class="gap-4 items-center md:flex hidden">
    <a
      href="https://www.linkedin.com/in/rose-bowen-867a72198/"
      class="menu-item"
      aria-label="LinkedIn"
    >
      <LinkedInIcon color="#4CFFF4" />
    </a>
    <!-- <a href="" class="menu-item" aria-label="Instagram">
      <InstagramIcon color="#4CFFF4" />
    </a> -->
  </div>
</header>

<style>
  .theme-button img {
    transition: transform 0.3s ease;
    transform: rotate(var(--rotation, 0deg));
  }

  .theme-button img.hover {
    transform: rotate(var(--rotation, 0deg)) scale(1.1);
  }

  .menu-item {
    opacity: 0;
    transform: translateY(-20px);
  }
</style>

<script>
  let hasAnimatedNavbar = false;

  function handleScroll() {
    const themeButtonImg: HTMLImageElement =
      document.querySelector(".theme-button img")!;
    if (themeButtonImg) {
      const scrollPercentage =
        window.scrollY /
        (document.documentElement.scrollHeight - window.innerHeight);
      const rotation = scrollPercentage * 360;
      themeButtonImg.style.setProperty("--rotation", `${rotation}deg`);
    }
  }

  function setupThemeButtonHover() {
    const themeButtonImg = document.querySelector(".theme-button img");
    if (themeButtonImg) {
      themeButtonImg.addEventListener("mouseenter", () =>
        themeButtonImg.classList.add("hover")
      );
      themeButtonImg.addEventListener("mouseleave", () =>
        themeButtonImg.classList.remove("hover")
      );
    }
  }

  function animateMenuItems() {
    if (hasAnimatedNavbar) return; // Skip if already animated

    const menuItems = document.querySelectorAll(".menu-item");
    menuItems.forEach((item, index) => {
      item.animate(
        [
          { opacity: 0, transform: "translateY(-20px)" },
          { opacity: 1, transform: "translateY(0)" },
        ],
        {
          duration: 3000,
          easing: "cubic-bezier(.16,1,.3,1)",
          fill: "forwards",
          delay: index * 100,
        }
      );
    });

    hasAnimatedNavbar = true; // Set the flag after animation
  }

  window.addEventListener("scroll", handleScroll);

  // Listen for the loadingComplete event
  document.addEventListener("loadingComplete", () => {
    setupThemeButtonHover();
    animateMenuItems();
  });
</script>
